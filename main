#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <locale.h>
#include <string.h>
#define MAX 50

//structs
struct Aviao {
	char codigo[7];
	char modelo[10];
	int capacidade;
	char nomeCliente[64];
	char paisOrigCliente[32];
};

struct PistaTeste {
	int codSequencial;
	char enderecoPista[128];
	char uf[2];
	float tamanhoCircuito;
	int velocidadeMax;
	char codigoMelhorAviao[7];
};

struct Testes {
	char idAviao[7];
	int idPista;
	char data[8];
	int velocidadeMax;
};

// declarando as structs
struct Aviao aviao[MAX];
struct PistaTeste pistaTeste[MAX];
struct Testes testes[MAX];

//prototipos das funções
void inclusaoAviao(struct Aviao aviao[]);
void alteracaoAviao(struct Aviao aviao[]);
void inclusaoPista (struct PistaTeste pistaTeste[] ,int codigoSeguemcial);
int main() {
int resp,continuar ;
int codigoSeguemcial ;
char ufs [55]={'ACALAMAPBACEDFESGOMAMGMSMTPAPBPEPIPRRJRNRORRRSSCSESPTO'};
codigoSeguemcial = 1000 ;
		

	setlocale(LC_ALL, "Portuguese");

	
	do {

		do {
			system ("cls");
			printf ("<< Bem vindo ao menu >> \n");
			printf ("Para acessar o menu de avião aperte [1]\n");
			printf ("Para acessar o menu da pista aperte [2]\n");
			printf ("Para acessar o menu de teste aperte [3] ");
			scanf ("%d",&resp);
		}while (resp != 1 & resp != 2 & resp != 3 );

	if (resp == 1 ){
    	do{
			system ("cls");
			printf (" Para incluir um avião aperte [1]\n ");
			printf ("Para fazer Alteração/complementação ja existen aperte [2]\n ");
			printf ("Para fazer a exclusão de um avião aperte [3]\n  ");
			scanf ("%d",&resp);	
		}while (resp != 1 & resp != 2 & resp != 3 );
	
	if (resp == 1){
	
		system("cls");
		inclusaoAviao(aviao);
	}
	
	
		printf ("para continuar aperte [0]" );
		scanf ("%d",&continuar);
		
}else if (resp == 2){
	do{
		
		system ("cls");
		printf ("Para incluir uma nova pista aperte [1]\n");\
		printf ("Para fazer alterações em pista ja existente aperte [2]");
		scanf ("%d",&resp);	
		if (resp ==1){
			inclusaoPista (pistaTeste, codigoSeguemcial);
		}
	 }while (resp != 1 & resp != 2  );
	
		
		printf ("para continuar aperte [0]" );
		scanf ("%d",&continuar);
}else if (resp ==3 ){
		system ("cls");
	printf ("Para fazer a inclusão de um avião em uma pista teste aperte [1]\n ");
	printf ("Para fazer a alteração em dados cadastrais de um teste aperte [2]\n");
	printf ("Para fazer exclusão de um teste de um avião aperte [3]");
	scanf ("%d",&resp);		
		
			
	printf ("para continuar aperte [0]" );
	scanf ("%d",&continuar);
}
}while (continuar == 0);
	
	
	return 0;
}

void inclusaoPista (struct PistaTeste pistaTeste[],int codigoSeguemcial ) {
	int i;
	system("cls");
	printf ("informe o endereço da pista :\n");
	fflush(stdin);
	fgets (pistaTeste[i].enderecoPista,128,stdin);

	
	printf ("informe o estado da federação onde localiza-se a pista :\n");
	fgets (pistaTeste[i].uf,2,stdin);
	
	printf ("Informe o tamanho do circuito : (em quilômetros )\n");
	scanf ("%f",&pistaTeste[i].tamanhoCircuito);
	printf ("informe a velocidade maxima da psita :  ");
	scanf ("%i",&pistaTeste[i].velocidadeMax);
	codigoSeguemcial =  codigoSeguemcial + 1;
	pistaTeste[i].codSequencial = codigoSeguemcial;
	printf ("%i\n",pistaTeste[i].codSequencial);

}


void inclusaoAviao(struct Aviao aviao[]){
char codigo[8];	
int i, flag;	
	
	printf("\t\tINCLUSÃO DE AVIÃO");
	printf("\n\n");

	do{
		flag = 0;
		printf("\ndigite o código de identificação: ");
		fflush(stdin);
		fgets(codigo,8,stdin);
		while(codigo[0] == '\n'){
			printf("codigo invalido, digite novamente:");
			fflush(stdin);
			fgets(codigo,8,stdin);
		}
		for(i=0;i<MAX;i++){
			if(stricmp(codigo,aviao[i].codigo) == 0){
				printf("codigo já registrado, digite outro codigo");
				flag++;
			}			
		}
		if(flag == 0){
			strcpy(aviao[0].codigo,codigo);
		}
			
	}while(flag == 1);
	printf("codigo do aviao: %s", aviao[0].codigo);//


	printf("\n");
	printf("Digite o modelo do avião:");
	fflush(stdin);
	fgets(aviao[0].modelo,11,stdin);
	while(aviao[0].modelo[0] == '\n'){
			printf("modelo invalido, digite novamente:");
			fflush(stdin);
			fgets(aviao[0].modelo,11,stdin);
	}
	printf("modelo do aviao: %s", aviao[0].modelo);//
	
	
	printf("\n");
	printf("Digite a capacidade de passageiros do avião: ");
	scanf("%d", &aviao[0].capacidade);
	while(aviao[0].capacidade <= 0){
		printf("codigo invalido, digite novamente:");
		scanf("%d", &aviao[0].capacidade);	
	}
	printf("capacidade do aviao: %d passageiros",aviao[0].capacidade);//


	printf("\n");
	printf("digite o nome do cliente: ");
	fflush(stdin);
	fgets(aviao[0].nomeCliente,64,stdin);
	while(aviao[0].nomeCliente[0] == '\n'){
			printf("nome inválido, digite novamente:");
			fflush(stdin);
			fgets(aviao[0].nomeCliente,64,stdin);
	}
	printf("nome do cliente : %s", aviao[0].nomeCliente);//
	
	
	printf("\n");
	printf("digite o país de origem do cliente: ");
	fflush(stdin);
	fgets(aviao[0].paisOrigCliente,32,stdin);
	printf("país do cliente : %s", aviao[0].paisOrigCliente);	//
}

void alteracaoAviao(struct Aviao aviao[]){
int menu, i;
	do{
		printf("\t\tALTERAÇÃO DE AVIÃO");
		printf("\n\n");
		printf("menu de alteração: ");
		printf("\n 1 - alterar codigo de identificação");	
		printf("\n 2 - alterar modelo do avião");
		printf("\n 3 - alterar capacidade do avião");
		printf("\n 4 - alterar nome do cliente");
		printf("\n 5 - alterar país de origem do cliente");	
		printf("\n");
		scanf("%d", &menu);

	}while(menu != 1 && menu != 2 && menu != 3 && menu != 4 && menu != 5);
	switch(menu){
		
	case 1:
		printf("alteração de código de identificação\n");
		printf("listagem com todos os codigos disponiveis para alterar: ");
		for(i=0;i<MAX;i++){
			if(aviao[i].codigo[0] != '\0'){
				printf("posição %d disponível para alterar", i);
			}else{
				printf("posição não disponivel");
			}
			printf("\n");
			
		}
		
		
	}
	

}
